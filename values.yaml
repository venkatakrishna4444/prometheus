replicaCount: 2

image:
  prometheus:
    repository: prom/prometheus
    tag: "v2.29.2"
    pullPolicy: IfNotPresent
  alertmanager:
    repository: prom/alertmanager
    tag: "v0.23.0"
    pullPolicy: IfNotPresent
  nodeExporter:
    repository: prom/node-exporter
    tag: "v1.1.2"
    pullPolicy: IfNotPresent

service:
  type: LoadBalancer
  port: 80

resources:
  prometheus:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi
  alertmanager:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 512Mi
  nodeExporter:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi

storage:
  prometheus:
    type: pvc
    size: 50Gi
  alertmanager:
    type: pvc
    size: 10Gi

securityContext:
  fsGroup: 2000
  runAsUser: 1000

nodeSelector: {}

tolerations: []

affinity: {}

hpa:
  prometheus:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    cpu: 80
  alertmanager:
    enabled: true
    minReplicas: 2
    maxReplicas: 5
    cpu: 80

alertmanager:
  config: |
    global:
      resolve_timeout: 5m
    route:
      group_by: ['alertname']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      receiver: 'null'
    receivers:
    - name: 'null'



scrapeConfigs:
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
  - job_name: 'node-exporter'
    kubernetes_sd_configs:
      - role: endpoints
    relabel_configs:
      - action: keep
        regex: node-exporter

ingress:
  enabled: false
  annotations: {}
  hosts:
    - host: prometheus.local
      paths: []
  tls: []

namespace: prometheus
serviceAccount:
  name: prometheus

